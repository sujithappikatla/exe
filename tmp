// ColorPicker.kt
package com.example.whiteboardapp

import androidx.compose.foundation.background
import androidx.compose.foundation.border
import androidx.compose.foundation.clickable
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.lazy.LazyRow
import androidx.compose.foundation.lazy.items
import androidx.compose.foundation.shape.CircleShape
import androidx.compose.material3.AlertDialog
import androidx.compose.material3.Text
import androidx.compose.material3.TextButton
import androidx.compose.runtime.*
import androidx.compose.ui.Modifier
import androidx.compose.ui.draw.clip
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.unit.dp

@Composable
fun ColorPicker(
    onColorSelected: (Color) -> Unit,
    onDismiss: () -> Unit
) {
    val colors = listOf(
        Color.Black, Color.Gray, Color.Red, Color.Green, Color.Blue,
        Color.Cyan, Color.Magenta, Color.Yellow, Color.White
    )

    AlertDialog(
        onDismissRequest = onDismiss,
        title = { Text("Select Color") },
        text = {
            LazyRow(
                horizontalArrangement = Arrangement.spacedBy(8.dp)
            ) {
                items(colors) { color ->
                    Box(
                        modifier = Modifier
                            .size(48.dp)
                            .clip(CircleShape)
                            .background(color)
                            .border(2.dp, Color.Black, CircleShape)
                            .clickable { onColorSelected(color) }
                    )
                }
            }
        },
        confirmButton = {
            TextButton(onClick = onDismiss) {
                Text("Cancel")
            }
        }
    )
}

// WidthPicker.kt
package com.example.whiteboardapp

import androidx.compose.foundation.layout.*
import androidx.compose.material3.AlertDialog
import androidx.compose.material3.Slider
import androidx.compose.material3.Text
import androidx.compose.material3.TextButton
import androidx.compose.runtime.*
import androidx.compose.ui.Modifier
import androidx.compose.ui.unit.dp

@Composable
fun WidthPicker(
    initialWidth: Float,
    onWidthSelected: (Float) -> Unit,
    onDismiss: () -> Unit
) {
    var selectedWidth by remember { mutableStateOf(initialWidth) }

    AlertDialog(
        onDismissRequest = onDismiss,
        title = { Text("Select Width") },
        text = {
            Column {
                Slider(
                    value = selectedWidth,
                    onValueChange = { selectedWidth = it },
                    valueRange = 1f..50f,
                    steps = 49
                )
                Text("Width: ${selectedWidth.toInt()}")
            }
        },
        confirmButton = {
            TextButton(onClick = { onWidthSelected(selectedWidth) }) {
                Text("Confirm")
            }
        },
        dismissButton = {
            TextButton(onClick = onDismiss) {
                Text("Cancel")
            }
        }
    )
}

// PageNavigation.kt
package com.example.whiteboardapp

import androidx.compose.foundation.layout.*
import androidx.compose.material3.Icon
import androidx.compose.material3.IconButton
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.unit.dp

@Composable
fun PageNavigation(
    currentPage: Int,
    totalPages: Int,
    onPreviousPage: () -> Unit,
    onNextPage: () -> Unit,
    onAddNewPage: () -> Unit
) {
    Row(
        modifier = Modifier
            .fillMaxWidth()
            .padding(8.dp),
        horizontalArrangement = Arrangement.SpaceBetween,
        verticalAlignment = Alignment.CenterVertically
    ) {
        IconButton(
            onClick = onPreviousPage,
            enabled = currentPage > 0
        ) {
            Icon(
                painter = painterResource(id = R.drawable.ic_previous),
                contentDescription = "Previous page"
            )
        }

        Text("Page ${currentPage + 1} of $totalPages")

        IconButton(
            onClick = onNextPage,
            enabled = currentPage < totalPages - 1
        ) {
            Icon(
                painter = painterResource(id = R.drawable.ic_next),
                contentDescription = "Next page"
            )
        }

        IconButton(onClick = onAddNewPage) {
            Icon(
                painter = painterResource(id = R.drawable.ic_add),
                contentDescription = "Add new page"
            )
        }
    }
}

// Icons.kt
package com.example.whiteboardapp

import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.filled.*
import androidx.compose.ui.graphics.vector.ImageVector

object WhiteboardIcons {
    val Pen: ImageVector = Icons.Default.Edit
    val Brush: ImageVector = Icons.Default.Brush
    val Eraser: ImageVector = Icons.Default.Delete
    val Undo: ImageVector = Icons.Default.Undo
    val Color: ImageVector = Icons.Default.Palette
    val Width: ImageVector = Icons.Default.LineWeight
    val NewPage: ImageVector = Icons.Default.Add
    val Previous: ImageVector = Icons.Default.ArrowBack
    val Next: ImageVector = Icons.Default.ArrowForward
}